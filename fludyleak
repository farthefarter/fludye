local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/farthefarter/easd/main/ui"))()

local Window = library:AddWindow("Fludy.xyz", {
    main_color = Color3.fromRGB(41, 74, 122),
    min_size = Vector2.new(450, 500),
    toggle_key = Enum.KeyCode.RightShift,
    can_resize = true,
})

local Aiming = loadstring(game:HttpGet("https://raw.githubusercontent.com/farthefarter/silent/main/urmomugly"))()
local ESP = loadstring(game:HttpGet("https://raw.githubusercontent.com/farthefarter/fludyesp/main/esp"))()
ESP:Toggle(false)
ESP.Tracers = false
ESP.Names = false
ESP.Boxes = false
Aiming.TeamCheck(false)
Aiming.VisibleCheck = false
-- // Dependencies

-- // Services
local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

-- // Vars
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local CurrentCamera = Workspace.CurrentCamera

local themes = {
    Background = Color3.fromRGB(24, 24, 24),
    Glow = Color3.fromRGB(0, 0, 0),
    Accent = Color3.fromRGB(10, 10, 10),
    LightContrast = Color3.fromRGB(20, 20, 20),
    DarkContrast = Color3.fromRGB(14, 14, 14),  
    TextColor = Color3.fromRGB(255, 255, 255)
}

local DaHoodSettings = {
    SilentAim = false,
    AimLock = true,
    Prediction = 0.165
}

getgenv().DaHoodSettings = DaHoodSettings

local AIMTab = Window:AddTab("Aimbot")
local VISTab = Window:AddTab("Visuals")
local MISCTab = Window:AddTab("Misc")
local SETTab = Window:AddTab("Settings")

AIMTab:AddSwitch("Enabled", function(bool)
    print("no")
end)

AIMTab:AddSwitch("Ignore Bots", function(bool)
    print("no")
end)


AIMTab:AddSwitch("Target Allies", function(bool)
    print("no")
end)

AIMTab:AddSwitch("Aim Assist", function(bool)
    print("no")
end)


AIMTab:AddSwitch("Aim Lock", function(bool)
loadstring(game:HttpGet(("https://raw.githubusercontent.com/farthefarter/idont/main/rush"), true))()
end)


AIMTab:AddSwitch("Silent Aim", function(bool)
    print("no")
end)


AIMTab:AddSwitch("Control Recoil", function(bool)
    print("no")
end)


AIMTab:AddSwitch("No Recoil", function(bool)
    print("no")
end)

AIMTab:AddSwitch("No Spread", function(bool)
    print("no")
end)

AIMTab:AddSwitch("Autoshoot", function(bool)
    print("no")
end)

AIMTab:AddSlider("Shoot Delay", function(value)
    DaHoodSettings.Prediction = tonumer("0." .. value)
end, {
    ["min"] = 0,
    ["max"] = 10,
    ["readonly"] = false,
})

AIMTab:AddSwitch("Draw FOV", function(bool)
    print("no")
end)

AIMTab:AddSwitch("FOV Color", function(bool)
    print("no")
end)

AIMTab:AddSwitch("Radius Recoil", function(bool)
    print("no")
end)

AIMTab:AddSlider("Aim Radius", function(value)
    DaHoodSettings.Prediction = tonumer("0." .. value)
end, {
    ["min"] = 0,
    ["max"] = 1000,
    ["readonly"] = false,
})

AIMTab:AddSlider("Radius Shape", function(value)
    DaHoodSettings.Prediction = tonumer("0." .. value)
end, {
    ["min"] = 0,
    ["max"] = 100,
    ["readonly"] = false,
})

AIMTab:AddSlider("Silent Aim Accuracy", function(value)
    DaHoodSettings.Prediction = tonumer("0." .. value)
end, {
    ["min"] = 0,
    ["max"] = 100,
    ["readonly"] = false,
})

AIMTab:AddSlider("Aim Smoothness", function(value)
    DaHoodSettings.Prediction = tonumer("0." .. value)
end, {
    ["min"] = 0,
    ["max"] = 100,
    ["readonly"] = false,
})

AIMTab:AddLabel("FOV Color")
local cp = AIMTab:AddColorPicker(function(color)
print("color")
end)

local dropdown = AIMTab:AddDropdown("Hitbox", function(text)
print("Hitbox")
end)

AIMTab:AddSwitch("Head", function(bool)
    print("no")
end)

AIMTab:AddSwitch("Torso", function(bool)
    print("no")
end)

AIMTab:AddSwitch("Legs", function(bool)
    print("no")
end)

AIMTab:AddSwitch("Random", function(bool)
    print("no")
end)

AIMTab:AddSwitch("Closest", function(bool)
    print("no")
end)

AIMTab:AddSwitch("Keep Pressed", function(bool)
    print("no")
end)

AIMTab:AddSwitch("Visible Check", function(bool)
print("ok")
end)

VISTab:AddSwitch("Enabled", function(bool)
print("ok")
end)

VISTab:AddSwitch("Team Check", function(bool)
print("ok")
end)

VISTab:AddSwitch("Draw Box", function(bool)
loadstring(game:HttpGet(("https://raw.githubusercontent.com/farthefarter/universal/main/boxesp.lua"), true))()
end)

VISTab:AddSwitch("Draw Snaplines", function(bool)
loadstring(game:HttpGet(("https://raw.githubusercontent.com/farthefarter/tracer/main/topsecret.lua"), true))()
end)

VISTab:AddSwitch("Chams", function(bool)
loadstring(game:HttpGet(("https://raw.githubusercontent.com/farthefarter/universalchams/main/fludycham.lua"), true))()
end)

SETTab:AddTextBox("Config Name", function(text)
print("uh oh")
end)

SETTab:AddButton("Save", function()
print("nope")
end)

SETTab:AddButton("Load", function()
print("yep")
end)

SETTab:AddSlider("Menu DPI", function(value)
    DaHoodSettings.Prediction = tonumer("0." .. value)
end, {
    ["min"] = 0,
    ["max"] = 100,
    ["readonly"] = false,
})

SETTab:AddButton("Unload All Features", function()
print("nope")
end)

SETTab:AddButton("Unload Cheat", function()
print("nope")
end)

MISCTab:AddSwitch("Better Movement", function(bool)
print("ok")
end)

MISCTab:AddSwitch("Auto Strafe", function(bool)
print("ok")
end)

MISCTab:AddSlider("Auto Strafe Value", function(value)
    DaHoodSettings.Prediction = tonumer("0." .. value)
end, {
    ["min"] = 0,
    ["max"] = 100,
    ["readonly"] = false,
})

MISCTab:AddSwitch("Anti OBS", function(bool)
print("ok")
end)
-- // Overwrite to account downed
function Aiming.Check()
    -- // Check A
    if not (Aiming.Enabled == true and Aiming.Selected ~= LocalPlayer and Aiming.SelectedPart ~= nil) then
        return false
    end

    -- // Check if downed
    local Character = Aiming.Character(Aiming.Selected)
    local KOd = Character:WaitForChild("BodyEffects")["K.O"].Value
    local Grabbed = Character:FindFirstChild("GRABBING_CONSTRAINT") ~= nil

    -- // Check B
    if (KOd or Grabbed) then
        return false
    end

    -- //
    return true
end

-- // Hook
local __index
__index = hookmetamethod(game, "__index", function(t, k)
    -- // Check if it trying to get our mouse's hit or target and see if we can use it
    if (t:IsA("Mouse") and (k == "Hit" or k == "Target") and Aiming.Check()) then
        -- // Vars
        local SelectedPart = Aiming.SelectedPart

        -- // Hit/Target
        if (DaHoodSettings.SilentAim and (k == "Hit" or k == "Target")) then
            -- // Hit to account prediction
            local Hit = SelectedPart.CFrame + (SelectedPart.Velocity * DaHoodSettings.Prediction)

            -- // Return modded val
            return (k == "Hit" and Hit or SelectedPart)
        end
    end

    -- // Return
    return __index(t, k)
end)

-- // Aimlock
RunService:BindToRenderStep("AimLock", 0, function()
    if (DaHoodSettings.AimLock and Aiming.Check() and UserInputService:IsKeyDown(Enum.KeyCode[string.upper(AimlockKey)])) then
        -- // Vars
        local SelectedPart = Aiming.SelectedPart

        -- // Hit to account prediction
        local Hit = SelectedPart.CFrame + (SelectedPart.Velocity * DaHoodSettings.Prediction)

        -- // Set the camera to face towards the Hit
        CurrentCamera.CFrame = CFrame.lookAt(CurrentCamera.CFrame.Position, Hit.Position)
    end
end)
